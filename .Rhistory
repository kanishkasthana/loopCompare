318.75-312.5
sqrt(7.5)
q()
data(sleep)
slepp
sleep
data(sleep)
?sleep
head(sleep)
?qnorm
pnorm(30,mean=25,sd=5/(4*sqrt(10)))-pnorm(20,mean=25,sd=5/(4*sqrt(10)))
pnorm(30,mean=25,sd=5/(4*sqrt(10)))
qnorm(30,mean=25,sd=5/(4*sqrt(10)))
pnorm(30,mean=25,sd=5/(4*sqrt(10)))
pnorm(26,mean=25,sd=5/(4*sqrt(10)))
pnorm(26,mean=25,sd=1/sqrt(8)
)
pnorm(30,mean=25,sd=1/sqrt(8)
)
1+4+9+16-25
5/4
y=c(1,2,3,4)
n=(1,2,3)
n=c(1,2,3)
plot(y,(y/4)^n -((y-1)/4)^n)
plot(y,(y/4)^1 -((y-1)/4)^1)
plot(y,cumsum((y/4)^1 -((y-1)/4)^1))
plot(y,(y/4)^2 -((y-1)/4)^2)
plot(y,cumsum((y/4)^2 -((y-1)/4)^2))
plot(y,(y/4)^3 -((y-1)/4)^3)
plot(y,cumsum((y/4)^3 -((y-1)/4)^3))
exp(1)
1-exp(log(0.9)/(0.7*10^6))
log(1-exp(log(0.9)/(0.7*10^6)))
log(1-exp(log(0.9)/(0.7*10^6)))/log(0.3)
alpha=0.1
N=1000000
p=seq(0,1,by=0.01)
log(1-exp(log(1-alpha)/((1-p)*N)))/log(1-p)
plot(p,log(1-exp(log(1-alpha)/((1-p)*N)))/log(1-p))
plot(p,log(log(1-exp(log(1-alpha)/((1-p)*N)))/log(1-p)),main='Semi-Log plot')
plot(p,log(1-exp(log(1-alpha)/((1-p)*N)))/log(1-p))
plot(p,log(log(1-exp(log(1-alpha)/((1-p)*N)))/log(1-p)),main='Semi-Log plot')
alpha=0.1
p=0.3
N=1:1000000;
plot(N,log(1-exp(log(1-alpha)/((1-p)*N)))/log(1-p))
ls
N=1:10000;
plot(N,log(1-exp(log(1-alpha)/((1-p)*N)))/log(1-p))
N=1000000
p=0.3
alpha=seq(0,0.5,by=0.01)
plot(alpha,log(1-exp(log(1-alpha)/((1-p)*N)))/log(1-p))
q()
x=seq(0,2,by=0.001)
plot(x^2,x)
plot(x^2,x,t='l')
x=seq(0,2,by=0.000001)
plot(x^2,x,t='l')
x=seq(0,2,by=0.001)
sin(x)
plot(sin(x),x,t='l')
plot(x,sin(x),t='l')
pi
x=seq(0,2pi,by=0.001pi)
x=seq(0,2 pi,by=0.001 pi)
x=seq(0,2*pi,by=0.001*pi)
plot(x,sin(x))
plot(x,sin(x),t='s')
plot(x,sin(x),t='l')
plot(x,sin(x),t='l',c='r')
plot(x,sin(x),t='l',col='r')
plot(x,sin(x),t='l')
?plot
install.packages('ggplot2')
library('ggplot2')
install.packages('gridExtra')
InsectSprays
?InsectSprays
subdata <- InsectSprays[InsectSprays$spray %in% c("B", "C"),]
subdata
length(subdata)
dim(subdata)
y<-subdata$count
y
group <- as.character(subdata$spray)
group
testStat <- function(w, g) mean(w[g == "B"]) - mean(w[g == "C"])
observedStat <- testStat(y, group)
observedStat
group
y
y[g=='B']
y['B'=='B']
y[group=='B']
y[group=='C']
length(y[group=='B'])
length(y[group=='C'])
mean(y[group=='B'])-mean(y[group=='C'])
sample('group')
sample(group)
length(sample(group))
length(group)
?sample
x=(1:10)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
t.test(1,2,6,3,5,7,1)
t.test(c(1,2,6,3,5,7,1)
)
t.test(x=c(1,2,6,3,5,7,1)
)
x
mean(x)+2.57*sd(x)
mean(x)+2.57*sd(x)/sqrt(length(x))
mean(x)+2.57*sd(x)/sqrt(length(x)-1)
mean(x)+1.96*sd(x)/sqrt(lenght(x))
mean(x)+1.96*sd(x)/sqrt(length(x))
mean(x)-1.96*sd(x)/sqrt(length(x))
mean(x)
mean(x)-2.57*sd(x)/sqrt(length(x))
c(1, 2, 6, 3, 5, 7, 1)
x=c(1, 2, 6, 3, 5, 7, 1)
mean(x)-2.57*sd(x)/sqrt(length(x))
mean(x)+2.57*sd(x)/sqrt(length(x))
t.test(x)
?rnorm
qnorm(0.05)
qnorm(0.025)
pnorm(-1,959964)
pnorm(-1,95)
pnorm(0)
pnorm(-1.95)
pnrom(0.05)
pnorm(0.05)
qnorm(0.05)
qnorm(0.05)*4
qnorm(0.05)*4+25
qnorm(0.050
)
qnorm(0.95)
qnorm(0.95)*4+25
qnorm(0.95)*3+25
qnorm(0.05)*3+25
?z.test
??z.test
?pnorm
mu=seq(20,25,by=0.01)
mu
beta=function(mu){1-pnorm((20.07-mu)/3)+pnorm((29.93-mu)/3)}
beta(25)
beta=function(mu){-1*pnorm((20.07-mu)/3)+pnorm((29.93-mu)/3)}
beta(25)
plot(mu,beta(mu))
mu=seq(10,35,by=0.01)
plot(mu,beta(mu),type='l')
plot(mu,1-beta(mu),type='l')
plot(mu,beta(mu),type='l')
beta1=function(mu){-1*pnorm((20.07-mu)/3)+pnorm((29.93-mu)/3)}
beta2=function(mu){-1*pnorm((18.42-mu)/4)+pnorm((31.58-mu)/4)}
plot(mu,beta1(mu),type='l',col='red')
lines(mu,beta2(mu),col='blue')
mu=seq(0,50,by=0.01)
plot(mu,beta1(mu),type='l',col='red')
lines(mu,beta2(mu),col='blue')
plot(mu,beta1(mu),type='l',col='red')
plot(mu,beta1(mu),type='l',col='red',xlab='mu',ylab='Beta')
lines(mu,beta2(mu),col='blue')
plot(mu,beta1(mu),type='l',col='red',xlab='mu',ylab='Beta',legend=c("n=16","n=9"))
plot(mu,beta1(mu),type='l',col='red',xlab='mu',ylab='Beta',legend=c("n=16"))
legend(100,100,c("n=16","n=9"))
lines(mu,beta2(mu),col='blue')
legend(100,100,c("n=16","n=9"))
legend(2000,9.5, # places a legend at the appropriate place c("Health","Defense"), # puts text in the legend
lty=c(1,1), # gives the legend appropriate symbols (lines)
lwd=c(2.5,2.5),col=c("blue","red")) # gives the legend lines the correct color and width)
legend(2000,9.5, # places a legend at the appropriate place c("Health","Defense"), # puts text in the legend
lty=c(1,1), # gives the legend appropriate symbols (lines)
lwd=c(2.5,2.5),col=c("blue","red")) # gives the legend lines the correct color and width)
legend('topright', c("n=16","n=9") ,
lty=1, col=c('red', 'blue'), bty='n', cex=.75)
plot(mu,1-beta1(mu),type='l',col='red',xlab='mu',ylab='Power',legend=c("n=16"))
lines(mu,1-beta2(mu),col='blue')
legend('topright', c("n=16","n=9") ,
lty=1, col=c('red', 'blue'), bty='n', cex=.75)
dwilcox(9)
dwilcox(9,9)
dwilcox(n=9,m=9)
?dwilcox
dsignrank(9,9)
qsignrank(9,9)
?dsignrank
psignrank(9,9)
psignrank(45,9)
psignrank(44,9)
psignrank(43,9)
psignrank(42,9)
1-psignrank(43,9)
(1-psignrank(43,9))*2
(1-psignrank(35,9))*2
(1-psignrank(35,9))
(1-psignrank(36,9))
rpois(9,25)
rnorm(9,25,12)
rnorm(9,25,12)
rnorm(9,25,12)
rnorm(9,25,12)
sample=rnorm(9,25,12)
sample
wilcox.test(sample,mu=25)
t.test(sample,mu=25)
one.sample.z(sample,xbar=25,sigma=12)
mean(sample)
sample
sample=rnorm(9,25,12)
mean(sample)
wilcox.test(sample,mu=25)
sample:
;
sample
sample=rnorm(9,20,12)
sample
wilcox.test(sample,mu=25)
wilcox.test(sample,mu=25)
sample=rnorm(9,20,12)
wilcox.test(sample,mu=25)
sample=rnorm(9,10,12)
wilcox.test(sample,mu=25)
mean(sample)
sample
sample=rnorm(9,20,12)
wilcox.test(sample,mu=25)
mean(sample)
sample=rnorm(9,18,12)
wilcox.test(sample,mu=25)
mean(sample)
sample=rnorm(9,18,12)
mean(sample)
wilcox.test(sample,mu=25)
sample=rnorm(9,18,12)
mean(sample)
wilcox.test(sample,mu=25)
sample=rnorm(9,18,12)
mean(sample)
sample=rnorm(9,18,12)
mean(sample)
sample=rnorm(9,18,12)
mean(sample)
wilcox.test(sample,mu=25)
sample
mean(sample)
pnorm((mean(sample)-25)/4)
pnorm((18.42-25)/4)
pnorm((mean(sample)-25)/4)
pnorm((mean(sample)-25)/4)*2
sample=c(-5.208842,  3.426063, -5.449295,  1.489225, 28.816881, -3.092396, 24.591726,  6.195691, 23.326360)
sample
mean(sample)
pnorm((mean(sample)-25)/4)*2
wilcox.test(sample,mu=25)
sample=c(31.943075,  1.139502,  8.167945,  9.047540, 32.102479, 40.293676,  9.475453, 19.671234, 27.153397)
pnorm((mean(sample)-25)/4)*2
mean(sample)
pnorm((mean(sample)-25)/4)*2
wilcox.test(sample,mu=25)
sample=c(14.786441, 19.768012, 24.893697, -2.992949, 33.094201, 33.299370, 14.238745,  9.444914, 18.905951)
mean(sample)
pnorm((mean(sample)-25)/4)*2
wilcox.test(sample,mu=25)
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
samples
dim(samples)
nrow(samples)
ncol(samples)
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
dim(allsamples)
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
allsamples
str(allsamples)
allsamples[1]
dim(allsamples[1])
dim(allsamples[[1])
dim(allsamples[[1])
dim(allsamples[[1]])
dim(allsamples[[2]])
mean(allsamples[[2]])
mean(allsamples[[5]])
mean(allsamples[[1]])
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
mean(allsamples[[1000]])
mean(allsamples[[5000]])
mean(allsamples[[5001]])
mean(allsamples[[4001]])
mean(allsamples[[3001]])
mean(allsamples[[2001]])
mean(allsamples[[1001]])
mean(allsamples[[500]])
allsamples[[500]]]
allsamples[[500]]
dim(allsamples[[500]])
allsamples[[500]][1,3]
lapply(allsamples,mean)
sapply(allsamples,mean)
plot(mu1,sapply(allsamples,mean))
plot(mu1,sapply(allsamples,mean),t='l')
plot(sapply(allsamples,mean),t='l')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
wilc=seq(500)
wilc
wilc=seq()
wilc
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
betaz
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
lapply(allsamples[[1]],mean)
sapply(allsamples[[1]],mean)
apply(allsamples[[1]],1,mean)
apply(allsamples[[1]],1,function(sample){print(sample)})
apply(allsamples[[1]],1,function(sample){length(sample)})
abs(1)
abs(-1)
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
betaz
plot(mu1,betaz)
plot(mu1,betaz,t='l',col='red')
plot(mu1,1-betaz,t='l',col='red')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
sample
sd(sample)
t.test(sample)
c(550, 600, 450, 400, 610, 500)
x=c(550, 600, 450, 400, 610, 500)
sd(s)
sd(x)
var(x)
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
betat
plot(mu1,betat)
plot(mu1,betat-1)
plot(mu1,betat,t)
plot(mu1,betat,t='l')
plot(mu1,betaz,t='l',col='red')
lines(mu1,betat,t='l',col='blue')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
plot(mu1,betaz,t='l',col='red')
lines(mu1,betat,t='l',col='blue')
lines(mu1,betaw,t='l',col='green')
plot(mu1,betaz,t='l',col='red')
getwd()
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/HW5_H24.R')
source('C:/Users/kanis_000/Desktop/Homework6/HW6_H24.R')
getwd()
source('C:/Users/kanis_000/SkyDrive/Documents/HW6_H24.R')
source('C:/Users/kanis_000/SkyDrive/Documents/HW6_H24.R')
P1 = rbind(
+ c(3/4,1/4, 0, 0, 0), #
+ c(2/4,1/4,1/4, 0, 0), # G
+ c(3/4, 0, 0,1/4, 0), # GA
+ c(2/4,1/4, 0, 0,1/4), # GAG
+ c(3/4, 0, 0,1/4, 0) # GAGA
+ )
P1 = rbind(
c(3/4,1/4, 0, 0, 0), #
c(2/4,1/4,1/4, 0, 0), # G
c(3/4, 0, 0,1/4, 0), # GA
c(2/4,1/4, 0, 0,1/4), # GAG
c(3/4, 0, 0,1/4, 0) # GAGA
)
P1 = rbind(
c(3/4,1/4, 0, 0, 0), #
c(2/4,1/4,1/4, 0, 0), # G
c(3/4, 0, 0,1/4, 0), # GA
c(2/4,1/4, 0, 0,1/4), # GAG
c(3/4, 0, 0,1/4, 0))
p1
P1
P1''
t(P1)
rbind(t(P1),c(1,1,1,1,1))
rbind(t(P1)-diag(1,5),c(1,1,1,1,1))
solve(rbind(t(P1)-diag(1,5),c(1,1,1,1,1)),c(0,0,0,0,1)
)
?solve
solve(rbind(t(P1)-diag(1,5),c(1,1,1,1,1)),c(0,0,0,0,0,1))
qr.solve(rbind(t(P1)-diag(1,5),c(1,1,1,1,1)),c(0,0,0,0,0,1))
qr.solvw
qr.solve
?qr.solve
P1=cbind((0.7,0.3),(0.4,0.6))
P1=cbind((0.7,0.3),(0.4,0.6))
P1=rbind((0.7,0.3),(0.4,0.6))
P1=cbind((0.7,0.3),(0.4,0.6))
P1=cbind(c(0.7,0.3),c(0.4,0.6))
P1
P1-diag(1,2)
rbind(P1-diag(1,2),c(1,1))
qr.solve(rbind(P1-diag(1,2),c(1,1)),c(0,0,1))
3/7
4/7
P1
c(1,1)
c(1,1)%*%P1
t(c(1,1))%*%P1
t(c(1,2))%*%P1
?inv
?inverse
1.75*2
*2
*23.5*2
3.5*2
7/4
p1
P1
[0.6 0.3; 0.4 0.7]
rbind(c(0.6 0.3),c( 0.4 0.7))
rbind(c(0.6, 0.3),c( 0.4 ,0.7))
rbind(c(0.6, 0.3),c( 0.4 ,0.7))-diag(1,2)
v1=rbind(c(0.6, 0.3),c( 0.4 ,0.7))-diag(1,2)
rbind(v1,c(1,1))
qr.solve(rbind(v1,c(1,1)),(0,0,1))
qr.solve(rbind(v1,c(1,1)),c(0,0,1))
1/qr.solve(rbind(v1,c(1,1)),c(0,0,1))
4/7
3/7
p1=
;
p1=rbind(c(0.8,0.2,0,0),c(0.5,0.2,0.3,0),c(0.8,0,0,0.2),c(0.5,0.2,0.3,0))
p1
t(p1)
t(p1)-diag(1,4)
rbind(t(p1)-diag(1,4),c(1,1,1,1))
qr.solve(rbind(t(p1)-diag(1,4),c(1,1,1,1)),c(0,0,0,0,1))
getwd()
data=read.table('H30data.txt')
data
dim(data)
data[1,]
x=data[1,]
y=data[2,]
x=as.numeric(x)
x
y=as.numeric(y)
cov(x,y)
cov(y,x)
rbind(x,y)
Mat=rbind(x,y)
apply(Mat,2,mean)
apply(Mat,1,mean)
xcentered=x-mean(x)
ycentered=y-mean(y)
plot(xcentered,ycentered)
M=rbind(xcentered,ycentered)
M%*%t(M)
M%*%t(M)/(100-1)
bestfit=lm(y~I(x))
bestfit
x
y
bestfit
q()
source('~/Glass Rotation Data/checkOverlapofPeaks.R')
-10000-5000-10000-9000-9000-4500-8625-4310-4310-3000
ans=-10000-5000-10000-9000-9000-4500-8625-4310-4310-3000
ans*-1
ans*63
ans*62
ans*60
ans
ans-18000
ans*60
ans=ans-18000
ans=ans*-1
ans
ans*60
setwd("Wang Lab Rotation/loopCompare/")
source('~/Wang Lab Rotation/loopCompare/CTCFBindingComparison.R')
source('~/Wang Lab Rotation/loopCompare/CTCFBindingComparison.R')
source('~/Wang Lab Rotation/loopCompare/CTCFBindingComparison.R')
source('~/Wang Lab Rotation/loopCompare/CTCFBindingComparison.R')
